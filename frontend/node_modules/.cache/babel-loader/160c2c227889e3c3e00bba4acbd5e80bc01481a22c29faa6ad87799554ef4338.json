{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\Web\\\\tahadi30\\\\frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport LoadingPage from './LoadingPage';\nimport MainMenu from './MainMenu';\nimport PlayerSegment from './PlayerSegment';\nimport Scoreboard from './Scoreboard';\nimport '../styles/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"localhost:3001\", {\n  transports: [\"polling\"] // Temporarily force polling to see if it resolves the issue\n});\nconst Game = () => {\n  _s();\n  const [stage, setStage] = useState('menu'); // Start with the main menu\n  const [player1Score, setPlayer1Score] = useState(0);\n  const [player2Score, setPlayer2Score] = useState(0);\n  const [opponentFound, setOpponentFound] = useState(false);\n  const [yourTurn, setYourTurn] = useState(false);\n  const [playerMessage, setPlayerMessage] = useState('');\n  const [currentSegment, setCurrentSegment] = useState(1);\n  const [opponentId, setOpponentId] = useState('');\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0); // Track the current question index\n\n  useEffect(() => {\n    // Handle when the game starts\n    socket.on('startGame', ({\n      yourTurn,\n      opponentId\n    }) => {\n      setOpponentFound(true);\n      setYourTurn(yourTurn);\n      setOpponentId(opponentId);\n      setStage('playing');\n    });\n\n    // Show waiting message when no opponent is found yet\n    socket.on('waitingForOpponent', () => {\n      setPlayerMessage('Waiting for an opponent...');\n      setStage('loading'); // Keep showing the loading screen\n    });\n\n    // Update game state when turn changes\n    socket.on('updateGame', data => {\n      setYourTurn(socket.id === data.currentTurnId);\n      setCurrentPlayerIndex(data.currentPlayerIndex);\n      setPlayer1Score(data.player1Score);\n      setPlayer2Score(data.player2Score);\n    });\n\n    // Handle player disconnection updates\n    socket.on('playerDisconnected', () => {\n      alert('The other player disconnected. Game over.');\n      setStage('menu');\n    });\n    return () => {\n      socket.off('startGame');\n      socket.off('waitingForOpponent');\n      socket.off('updateGame');\n      socket.off('playerDisconnected');\n    };\n  }, []);\n  const handleStartGame = () => {\n    setStage('loading'); // Redirect to loading screen\n    socket.emit('joinGame'); // Request to join the game\n  };\n  const handleScore = player => {\n    let updatedPlayer1Score = player1Score;\n    let updatedPlayer2Score = player2Score;\n    if (player === 1) {\n      updatedPlayer1Score = player1Score + 1;\n      setPlayer1Score(updatedPlayer1Score);\n    } else {\n      updatedPlayer2Score = player2Score + 1;\n      setPlayer2Score(updatedPlayer2Score);\n    }\n    const updatedData = {\n      yourTurn: !yourTurn,\n      currentPlayerIndex: currentPlayerIndex + 1,\n      player1Score: updatedPlayer1Score,\n      player2Score: updatedPlayer2Score,\n      nextTurnId: yourTurn ? opponentId : socket.id\n    };\n    socket.emit('playerAnswered', updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [stage === 'loading' && /*#__PURE__*/_jsxDEV(LoadingPage, {\n      message: playerMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 31\n    }, this), stage === 'menu' && /*#__PURE__*/_jsxDEV(MainMenu, {\n      onStartGame: handleStartGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }, this), stage === 'playing' && opponentFound && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player player-north\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: \"Player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n          player1Score: player2Score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlayerSegment, {\n        onScore: handleScore,\n        currentQuestionIndex: currentPlayerIndex,\n        yourTurn: yourTurn,\n        onAnswered: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player player-south\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: \"Player 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n          player1Score: player1Score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"LBwjcrHC8zqVfQNPel07kEWKkoU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","io","LoadingPage","MainMenu","PlayerSegment","Scoreboard","jsxDEV","_jsxDEV","socket","transports","Game","_s","stage","setStage","player1Score","setPlayer1Score","player2Score","setPlayer2Score","opponentFound","setOpponentFound","yourTurn","setYourTurn","playerMessage","setPlayerMessage","currentSegment","setCurrentSegment","opponentId","setOpponentId","currentPlayerIndex","setCurrentPlayerIndex","on","data","id","currentTurnId","alert","off","handleStartGame","emit","handleScore","player","updatedPlayer1Score","updatedPlayer2Score","updatedData","nextTurnId","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onStartGame","onScore","currentQuestionIndex","onAnswered","_c","$RefreshReg$"],"sources":["C:/wamp/www/Web/tahadi30/frontend/src/components/Game.js"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport LoadingPage from './LoadingPage';\r\nimport MainMenu from './MainMenu';\r\nimport PlayerSegment from './PlayerSegment';\r\nimport Scoreboard from './Scoreboard';\r\nimport '../styles/Game.css';\r\n\r\nconst socket = io(\"localhost:3001\", {\r\n  transports: [\"polling\"], // Temporarily force polling to see if it resolves the issue\r\n});\r\n\r\n\r\nconst Game = () => {\r\n  const [stage, setStage] = useState('menu'); // Start with the main menu\r\n  const [player1Score, setPlayer1Score] = useState(0);\r\n  const [player2Score, setPlayer2Score] = useState(0);\r\n  const [opponentFound, setOpponentFound] = useState(false);\r\n  const [yourTurn, setYourTurn] = useState(false);\r\n  const [playerMessage, setPlayerMessage] = useState('');\r\n  const [currentSegment, setCurrentSegment] = useState(1);\r\n  const [opponentId, setOpponentId] = useState('');\r\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0); // Track the current question index\r\n\r\n  useEffect(() => {\r\n    // Handle when the game starts\r\n    socket.on('startGame', ({ yourTurn, opponentId }) => {\r\n      setOpponentFound(true);\r\n      setYourTurn(yourTurn);\r\n      setOpponentId(opponentId);\r\n      setStage('playing');\r\n    });\r\n\r\n    // Show waiting message when no opponent is found yet\r\n    socket.on('waitingForOpponent', () => {\r\n      setPlayerMessage('Waiting for an opponent...');\r\n      setStage('loading'); // Keep showing the loading screen\r\n    });\r\n\r\n    // Update game state when turn changes\r\n    socket.on('updateGame', (data) => {\r\n      setYourTurn(socket.id === data.currentTurnId);\r\n      setCurrentPlayerIndex(data.currentPlayerIndex);\r\n      setPlayer1Score(data.player1Score);\r\n      setPlayer2Score(data.player2Score);\r\n    });\r\n\r\n    // Handle player disconnection updates\r\n    socket.on('playerDisconnected', () => {\r\n      alert('The other player disconnected. Game over.');\r\n      setStage('menu');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('startGame');\r\n      socket.off('waitingForOpponent');\r\n      socket.off('updateGame');\r\n      socket.off('playerDisconnected');\r\n    };\r\n  }, []);\r\n\r\n  const handleStartGame = () => {\r\n    setStage('loading'); // Redirect to loading screen\r\n    socket.emit('joinGame'); // Request to join the game\r\n  };\r\n\r\n  const handleScore = (player) => {\r\n    let updatedPlayer1Score = player1Score;\r\n    let updatedPlayer2Score = player2Score;\r\n\r\n    if (player === 1) {\r\n      updatedPlayer1Score = player1Score + 1;\r\n      setPlayer1Score(updatedPlayer1Score);\r\n    } else {\r\n      updatedPlayer2Score = player2Score + 1;\r\n      setPlayer2Score(updatedPlayer2Score);\r\n    }\r\n\r\n    const updatedData = {\r\n      yourTurn: !yourTurn,\r\n      currentPlayerIndex: currentPlayerIndex + 1,\r\n      player1Score: updatedPlayer1Score,\r\n      player2Score: updatedPlayer2Score,\r\n      nextTurnId: yourTurn ? opponentId : socket.id,\r\n    };\r\n\r\n    socket.emit('playerAnswered', updatedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {stage === 'loading' && <LoadingPage message={playerMessage} />}\r\n      {stage === 'menu' && <MainMenu onStartGame={handleStartGame} />}\r\n      {stage === 'playing' && opponentFound && (\r\n        <div className=\"game-layout\">\r\n          <div className=\"player player-north\">\r\n            <p className='name'>Player 2</p>\r\n            <Scoreboard player1Score={player2Score} />\r\n          </div>\r\n          <PlayerSegment\r\n            onScore={handleScore}\r\n            currentQuestionIndex={currentPlayerIndex}\r\n            yourTurn={yourTurn}\r\n            onAnswered={() => {}}\r\n          />\r\n          <div className=\"player player-south\">\r\n            <p className='name'>Player 1</p>\r\n            <Scoreboard player1Score={player1Score} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}